#!/bin/bash

# AKUMA's Quick Path Checker
# –ë—ã—Å—Ç—Ä–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –ø—É—Ç–∏ —Å–µ–π—á–∞—Å –ø—Ä–æ–ø–∏—Å–∞–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥–∞—Ö

echo "üîç AKUMA's Path Checker - –°–º–æ—Ç—Ä–∏–º —á—Ç–æ —Ç–∞–º —É –Ω–∞—Å —Å –ø—É—Ç—è–º–∏ üîç"
echo ""

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
echo "üìÇ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $SCRIPT_DIR"
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
MAIN_FILE="$SCRIPT_DIR/CrossC2-GithubBot-2023-11-20.cna"
if [[ -f "$MAIN_FILE" ]]; then
    echo "üìÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º: CrossC2-GithubBot-2023-11-20.cna"
    echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—É—Ç–∏
    CC2_PATH_LINE=$(grep '^$CC2_PATH' "$MAIN_FILE" 2>/dev/null)
    CC2_BIN_LINE=$(grep '^$CC2_BIN' "$MAIN_FILE" 2>/dev/null)
    
    if [[ -n "$CC2_PATH_LINE" ]]; then
        echo "üêß Linux PATH:  $CC2_PATH_LINE"
    else
        echo "‚ùå CC2_PATH –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    fi
    
    if [[ -n "$CC2_BIN_LINE" ]]; then
        echo "üçé MacOS PATH:  $CC2_BIN_LINE"
    else
        echo "‚ùå CC2_BIN –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    fi
    
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —Ñ–∞–π–ª—ã –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø—É—Ç—è–º
    if [[ -n "$CC2_PATH_LINE" ]]; then
        PATH_VALUE=$(echo "$CC2_PATH_LINE" | sed 's/.*"\(.*\)".*/\1/')
        if [[ -f "$PATH_VALUE" ]]; then
            echo "‚úÖ genCrossC2.Linux –Ω–∞–π–¥–µ–Ω: $PATH_VALUE"
        else
            echo "‚ùå genCrossC2.Linux –ù–ï –Ω–∞–π–¥–µ–Ω: $PATH_VALUE"
        fi
    fi
    
    if [[ -n "$CC2_BIN_LINE" ]]; then
        BIN_VALUE=$(echo "$CC2_BIN_LINE" | sed 's/.*"\(.*\)".*/\1/')
        if [[ -f "$BIN_VALUE" ]]; then
            echo "‚úÖ genCrossC2.MacOS –Ω–∞–π–¥–µ–Ω: $BIN_VALUE"
        else
            echo "‚ùå genCrossC2.MacOS –ù–ï –Ω–∞–π–¥–µ–Ω: $BIN_VALUE"
        fi
    fi
    
else
    echo "‚ùå –§–∞–π–ª CrossC2-GithubBot-2023-11-20.cna –Ω–µ –Ω–∞–π–¥–µ–Ω!"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ä–∫–µ—Ä –ø—É—Ç–∏
PATH_MARKER="$SCRIPT_DIR/.current_path"
if [[ -f "$PATH_MARKER" ]]; then
    SAVED_PATH=$(cat "$PATH_MARKER")
    echo "üìç –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø—É—Ç—å: $SAVED_PATH"
    if [[ "$SAVED_PATH" == "$SCRIPT_DIR" ]]; then
        echo "‚úÖ –ü—É—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!"
    else
        echo "‚ö†Ô∏è  –ü—É—Ç–∏ –ù–ï —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã! –ó–∞–ø—É—Å—Ç–∏ setup_portable.sh"
    fi
else
    echo "üìç –ú–∞—Ä–∫–µ—Ä –ø—É—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫?)"
fi

echo ""
echo "üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
if [[ ! -f "$PATH_MARKER" ]] || [[ "$(cat "$PATH_MARKER" 2>/dev/null)" != "$SCRIPT_DIR" ]]; then
    echo "   üîß –ó–∞–ø—É—Å—Ç–∏: ./setup_portable.sh"
fi
echo "   üì± –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ./fix_paths.sh"
echo ""
echo "ü§ò –ö–∞–∫ –≥–æ–≤–æ—Ä–∏–ª –º–æ–π –¥–µ–¥: '–õ—É—á—à–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–≤–∞–∂–¥—ã, —á–µ–º –¥–µ–±–∞–∂–∏—Ç—å –≤—Å—é –Ω–æ—á—å!'"
